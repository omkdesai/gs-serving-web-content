name: "CI/Release Workflow"

on:
 push:
   branches:
     - '*'

env:
  # TODO: Change to name of your Docker Registry (eg. jfrog.io)
  DOCKER_REGISTRY: "omkdesai.jfrog.io"
  # TODO: Change part to name of your Docker Registry (eg. omkdesai.jfrog.io/jf repo name/image-name)
  IMAGE_NAME: "omkdesai.jfrog.io/gs-serving-web-docker/test"
  # PRISMA_USER:  ${{ secrets.PRISMA_USER }}
  # PRISMA_PASSWORD:  ${{ secrets.PRISMA_PASSWORD }}

jobs:
  build_and_push:
    name: Build, Test, and Push Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17   
       
      - name: Build dependencies with Maven
        # run: mvn clean install -Dmaven.test.skip=true
        run: | 
          mvn clean install -Dmaven.test.skip=true -Djfrog_server_username=${{ secrets.JFROG_USERNAME }} -Djfrog_server_password=${{ secrets.JFROG_API_KEY }}


      - name: Build with Maven
        # run: mvn package spring-boot:repackage -Dmaven.test.skip=true
        run: mvn package -Dmaven.test.skip=true

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}   
          
      - name: Determine Image Tag
        id: image_tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | sed 's/refs\/heads\///')-${{ github.run_number }}"
        
      - name: Docker build Image
        run: |
          jf docker build -t $IMAGE_NAME:${{ steps.image_tag.outputs.tag }} .
            
      - name: Docker Image check
        run: docker images     
        
      - if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/qa'
        name: Docker push image
        run: |
          jf docker push $IMAGE_NAME:${{ steps.image_tag.outputs.tag }}
          
#      - if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/qa'
#        name: Create release with image tag
#        id: create_release       
#        with:
#          tag_name: ${{ github.event.release.tag_name }}
#          release_name: Release ${{ steps.image_tag.outputs.tag }}
#          draft: false
#          prerelease: false
          
      # - id: scan-docker-image
      #   name: Scan docker image
      #   run: |
      #     curl -u $PRISMA_USER:$PRISMA_PASSWORD --output twistcli https://us-east1.cloud.twistlock.com/us-2-158257908/api/v1/util/twistcli && chmod +x twistcli && mv twistcli /tmp/
      #     /tmp/twistcli images scan --details --address https://us-east1.cloud.twistlock.com/us-2-158257908 --user $PRISMA_USER --password $PRISMA_PASSWORD $IMAGE_NAME


      
